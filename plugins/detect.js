import fetch from 'node-fetch'
import { WAMessageStubType } from '@whiskeysockets/baileys'

let handler = m => m

// FUNCI√ìN MEJORADA para obtener el jid real dentro del grupo
const getRealJid = async (jid, chatId, conn) => {
  if (!jid) return jid
  
  try {
    // Si ya es un JID normal (@s.whatsapp.net), retornarlo directamente
    if (jid.includes('@s.whatsapp.net')) {
      return jid
    }
    
    // Si es @lid, necesitamos buscar el JID real en los participantes
    if (jid.endsWith('@lid')) {
      const lidNumber = jid.replace('@lid', '') // Extraer solo el n√∫mero
      console.log(`üîç Buscando JID real para @lid: ${lidNumber}`)
      
      const group = await conn.groupMetadata(chatId)
      
      // Buscar por el n√∫mero en los participantes
      const member = group.participants.find(p => {
        if (!p.jid) return false
        const participantNumber = p.jid.replace('@s.whatsapp.net', '')
        return participantNumber === lidNumber
      })
      
      if (member) {
        console.log(`‚úÖ JID encontrado: ${member.jid} para @lid: ${lidNumber}`)
        return member.jid
      } else {
        console.log(`‚ùå No se encontr√≥ JID para @lid: ${lidNumber}`)
        // Si no encontramos el JID, al menos mostrar el n√∫mero
        return `${lidNumber}@s.whatsapp.net`
      }
    }
    
    return jid
    
  } catch (e) {
    console.error('‚ùå Error en getRealJid:', e)
    return jid
  }
}

handler.before = async function (m, { conn }) {
  // DEBUG: Ver todos los stubs que llegan
  if (m.messageStubType && m.isGroup) {
    console.log('üîç STUB DETECTADO:', {
      type: m.messageStubType,
      name: WAMessageStubType[m.messageStubType],
      params: m.messageStubParameters,
      chat: m.chat,
      sender: m.sender
    })
  }

  if (!m.isGroup || !m.messageStubType) return

  // FILTRO IMPORTANTE: Ignorar mensajes cifrados y otros stubs no deseados
  if (m.messageStubType === WAMessageStubType.CIPHERTEXT || 
      m.messageStubType === 2 || // CIPHERTEXT
      m.messageStubParameters?.some(param => 
        typeof param === 'string' && param.includes('decrypt')
      )) {
    return // Ignorar completamente estos mensajes
  }

  const chat = global.db.data.chats[m.chat]
  
  // VERIFICAR SI LA DETECCI√ìN EST√Å ACTIVADA EN ESTE GRUPO
  if (!chat?.detect) {
    console.log(`‚ùå Detector desactivado en: ${m.chat}`)
    return
  }

  console.log(`‚úÖ Detector ACTIVADO en: ${m.chat}`)

  const usuario = '@' + m.sender.split('@')[0]
  const pp = await conn.profilePictureUrl(m.chat, 'image').catch(() => null) || 'https://files.catbox.moe/xr2m6u.jpg'

  // Contacto para citar
  const fkontak = {
    key: {
      participants: "0@s.whatsapp.net",
      remoteJid: "status@broadcast",
      fromMe: false,
      id: "AlienMenu"
    },
    message: {
      locationMessage: {
        name: "ùôÄùô°ùôûùô©ùôö ùòΩùô§ùô© ùôÇùô°ùô§ùôóùôñùô° 2023 -",
        jpegThumbnail: Buffer.from(await (await fetch('https://files.catbox.moe/1j784p.jpg')).arrayBuffer()),
        vcard:
          "BEGIN:VCARD\n" +
          "VERSION:3.0\n" +
          "N:;Sasuke;;;\n" +
          "FN:Sasuke Bot\n" +
          "ORG:Barboza Developers\n" +
          "TITLE:\n" +
          "item1.TEL;waid=19709001746:+1 (970) 900-1746\n" +
          "item1.X-ABLabel:Alien\n" +
          "X-WA-BIZ-DESCRIPTION:üõ∏ Llamado grupal universal con estilo.\n" +
          "X-WA-BIZ-NAME:Sasuke\n" +
          "END:VCARD"
      }
    },
    participant: "0@s.whatsapp.net"
  }

  try {
    // Obtener jid real del participante si aplica - MEJORADO
    let stubUser = null
    if (m.messageStubParameters?.[0] && !m.messageStubParameters[0].includes('decrypt')) {
      stubUser = await getRealJid(m.messageStubParameters[0], m.chat, conn)
      console.log(`üë§ Usuario procesado: ${m.messageStubParameters[0]} -> ${stubUser}`)
    }

    // Mensajes MEJORADOS - Con manejo de usuarios no encontrados
    const nombre = `‚ú® ${usuario} *ha cambiado el nombre del grupo* ‚ú®\n\n> üìù *Nuevo nombre:* _${m.messageStubParameters?.[0] || ''}_`
    const foto = `üì∏ *¬°Nueva foto de grupo!* üì∏\n\n> üí´ Acci√≥n realizada por: ${usuario}`
    const edit = `‚öôÔ∏è ${usuario} ha ajustado la configuraci√≥n del grupo.\n\n> üîí Ahora *${m.messageStubParameters?.[0] == 'on' ? 'solo los administradores' : 'todos'}* pueden configurar el grupo.`
    const newlink = `üîó *¬°El enlace del grupo ha sido restablecido!* üîó\n\n> üí´ Acci√≥n realizada por: ${usuario}`
    const status = `‚ù±‚ù± ùó¢ÃÅùó•ùóóùóòùó°ùóòùó¶ ùó•ùóòùóñùóúùóïùóúùóóùóîùó¶ ‚ù∞‚ù∞\n\nüë§ ${m.messageStubParameters?.[0] == 'on' ? 'ùóñùóòùó•ùó•ùóîùóóùó¢' : 'ùóîùóïùóúùóòùó•ùóßùó¢'} ùó£ùó¢ùó• ${usuario}\n\n> üí¨ Ahora *${m.messageStubParameters?.[0] == 'on' ? 'solo los administradores' : 'todos'}* pueden enviar mensajes.`
    
    // Mensajes para promoci√≥n/degradaci√≥n MEJORADOS
    const userDisplay = stubUser ? `@${stubUser.split('@')[0]}` : 'Usuario'
    const admingp = `‚ù±‚ù± ùôÅùôÄùôáùôÑùòæùôÑùòøùòºùòøùôÄùôé ‚ù∞‚ù∞\n\nüë§ ${userDisplay}\n¬ª ùòºùôÉùôäùôçùòº ùôÄùôé ùòºùòøùôàùôÑùôâ.\n\n¬ª ùòºùòæùòæùôÑùôäÃÅùôâ ùôçùôÄùòºùôáùôÑùôïùòºùòøùò∞ ùôãùôäùôç:\n${usuario}`
    const noadmingp = `‚ù±‚ù± ùôÑùôâùôÅùôäùôçùôàùòºùòæùôÑùôäÃÅùôâ ‚ù∞‚ù∞\n\nüë§ ${userDisplay}\n¬ª ùôîùòº ùôâùôä ùôÄùôé ùòºùòøùôàùôÑùôâ.\n\n¬ª ùòºùòæùòæùôÑùôäÃÅùôâ ùôçùôÄùòºùôáùôÑùôïùòºùòøùòº ùôãùôäùôç:\n${usuario}`
    
    const descChange = `üìù ${usuario} ha cambiado la descripci√≥n del grupo.\n\n> üîπ Nueva descripci√≥n: _${m.messageStubParameters?.[0] || ''}_`
    const memberAddMode = `üë• ${usuario} ha cambiado el modo de adici√≥n de miembros.\n\n> üîπ Nuevo modo: _${m.messageStubParameters?.[0] || ''}_`
    const joinApprovalMode = `üîê ${usuario} ha cambiado el modo de aprobaci√≥n para unirse al grupo.\n\n> üîπ Nuevo modo: _${m.messageStubParameters?.[0] || ''}_`

    console.log(`üéØ PROCESANDO STUB: ${WAMessageStubType[m.messageStubType]}`, m.messageStubParameters)

    // Detectar tipos de stubs v√°lidos
    switch (m.messageStubType) {
      case WAMessageStubType.GROUP_CHANGE_NAME:
        console.log('üìù Cambio de nombre detectado')
        await conn.sendMessage(m.chat, { text: nombre, mentions: [m.sender] }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_CHANGE_ICON:
        console.log('üñºÔ∏è Cambio de foto detectado')
        await conn.sendMessage(m.chat, { image: { url: pp }, caption: foto, mentions: [m.sender] }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_CHANGE_ANNOUNCE:
        console.log('üîä Cambio de anuncios detectado')
        await conn.sendMessage(m.chat, { text: status, mentions: [m.sender] }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_CHANGE_RESTRICT:
        console.log('‚öôÔ∏è Cambio de restricciones detectado')
        await conn.sendMessage(m.chat, { text: edit, mentions: [m.sender] }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_CHANGE_INVITE_LINK:
        console.log('üîó Cambio de enlace detectado')
        await conn.sendMessage(m.chat, { text: newlink, mentions: [m.sender] }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_PARTICIPANT_PROMOTE:
        console.log('‚¨ÜÔ∏è Usuario promovido a admin')
        // SIEMPRE enviar mensaje, aunque no encontremos el JID exacto
        const mentionsPromote = stubUser && stubUser.includes('@s.whatsapp.net') ? [m.sender, stubUser] : [m.sender]
        await conn.sendMessage(m.chat, { text: admingp, mentions: mentionsPromote }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_PARTICIPANT_DEMOTE:
        console.log('‚¨áÔ∏è Usuario degradado de admin')
        // SIEMPRE enviar mensaje, aunque no encontremos el JID exacto
        const mentionsDemote = stubUser && stubUser.includes('@s.whatsapp.net') ? [m.sender, stubUser] : [m.sender]
        await conn.sendMessage(m.chat, { text: noadmingp, mentions: mentionsDemote }, { quoted: fkontak })
        break
      case WAMessageStubType.GROUP_CHANGE_DESCRIPTION:
        console.log('üìÑ Cambio de descripci√≥n detectado')
        await conn.sendMessage(m.chat, { text: descChange, mentions: [m.sender] }, { quoted: fkontak })
        break
      case 171: // GROUP_MEMBER_ADD_MODE
        console.log('üë• Cambio modo adici√≥n miembros')
        await conn.sendMessage(m.chat, { text: memberAddMode, mentions: [m.sender] }, { quoted: fkontak })
        break
      case 145: // GROUP_MEMBERSHIP_JOIN_APPROVAL_MODE
        console.log('üîê Cambio modo aprobaci√≥n ingreso')
        await conn.sendMessage(m.chat, { text: joinApprovalMode, mentions: [m.sender] }, { quoted: fkontak })
        break
      default:
        console.log('‚ùì Stub no manejado:', {
          messageStubType: m.messageStubType,
          messageStubParameters: m.messageStubParameters,
          type: WAMessageStubType[m.messageStubType],
        })
    }
    
    console.log('‚úÖ Stub procesado exitosamente')
    
  } catch (error) {
    console.error('‚ùå Error en detector de cambios de grupo:', error)
  }
}

export default handler
